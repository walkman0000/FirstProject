<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [F:\zxs_ARMV4\QBC485_TestYL_JOY_20130727\P_UART.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image F:\zxs_ARMV4\QBC485_TestYL_JOY_20130727\P_UART.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, RVCT4.0 [Build 728]: Last Updated: Mon Mar 10 13:39:42 2014
<BR><P>
<H3>Maximum Stack Usage =         28 bytes + Unknown(Functions without stacksize, Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
main &rArr; T1_recCheck &rArr; CRC16
<P>
<H3>
Functions with no stack information
</H3><UL>
 <LI><a href="#[dd0568]">Reset_Handler</a>
 <LI><a href="#[dd05a4]">__user_initial_stackheap</a>
 <LI><a href="#[dd07c0]">Undef_Handler</a>
 <LI><a href="#[dd0784]">SWI_Handler</a>
 <LI><a href="#[dd0748]">PAbt_Handler</a>
 <LI><a href="#[dd070c]">DAbt_Handler</a>
 <LI><a href="#[dd06d0]">IRQ_Handler</a>
 <LI><a href="#[dd0694]">FIQ_Handler</a>
</UL>
</UL>
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[dd07c0]">Undef_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[dd07c0]">Undef_Handler</a><BR>
 <LI><a href="#[dd0784]">SWI_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[dd0784]">SWI_Handler</a><BR>
 <LI><a href="#[dd0748]">PAbt_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[dd0748]">PAbt_Handler</a><BR>
 <LI><a href="#[dd070c]">DAbt_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[dd070c]">DAbt_Handler</a><BR>
 <LI><a href="#[dd06d0]">IRQ_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[dd06d0]">IRQ_Handler</a><BR>
 <LI><a href="#[dd0694]">FIQ_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[dd0694]">FIQ_Handler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[dd0568]">Reset_Handler</a>
 <LI><a href="#[dd07c0]">Undef_Handler</a>
 <LI><a href="#[dd0784]">SWI_Handler</a>
 <LI><a href="#[dd0748]">PAbt_Handler</a>
 <LI><a href="#[dd070c]">DAbt_Handler</a>
 <LI><a href="#[dd06d0]">IRQ_Handler</a>
 <LI><a href="#[dd0694]">FIQ_Handler</a>
 <LI><a href="#[dc84bc]">__main</a>
 <LI><a href="#[dcf3d4]">main</a>
 <LI><a href="#[dc3d04]">__I$use$semihosting</a>
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[dd0568]"></a>Reset_Handler</STRONG> (ARM, 0 bytes, Stack size unknown bytes, lpc2400.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> lpc2400.o(RESET)
</UL>
<P><STRONG><a name="[dc84bc]"></a>__main</STRONG> (ARM, 8 bytes, Stack size 0 bytes, __main.o(!!!main))
<BR><BR>[Calls]<UL><LI><a href="#[dc8390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
<LI><a href="#[148125c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[148125c]"></a>__scatterload</STRONG> (ARM, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter))
<BR><BR>[Called By]<UL><LI><a href="#[dc84bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[1481220]"></a>__scatterload_rt2</STRONG> (ARM, 52 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[dc8390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[14811e4]"></a>__scatterload_null</STRONG> (ARM, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[1481040]"></a>__scatterload_copy</STRONG> (ARM, 40 bytes, Stack size unknown bytes, __scatter_copy.o(!!handler_copy), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1481040]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>
<BR>[Called By]<UL><LI><a href="#[1481040]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>

<P><STRONG><a name="[1480f50]"></a>__scatterload_zeroinit</STRONG> (ARM, 44 bytes, Stack size unknown bytes, __scatter_zi.o(!!handler_zi), UNUSED)

<P><STRONG><a name="[dc6fa4]"></a>__rt_lib_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit.o(.ARM.Collect$$libinit$$00000000))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __rt_lib_init &rArr; _fp_init
</UL>
<BR>[Calls]<UL><LI><a href="#[dc4a60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_init (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[dc7cc4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_li (via Veneer)
</UL>

<P><STRONG><a name="[dc50f0]"></a>__rt_lib_init_alloca_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002A))

<P><STRONG><a name="[dc5168]"></a>__rt_lib_init_argv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000028))

<P><STRONG><a name="[dc5528]"></a>__rt_lib_init_atexit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000017))

<P><STRONG><a name="[dc53c0]"></a>__rt_lib_init_clock_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001D))

<P><STRONG><a name="[dc5000]"></a>__rt_lib_init_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002E))

<P><STRONG><a name="[dc5078]"></a>__rt_lib_init_exceptions_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002C))

<P><STRONG><a name="[dc5438]"></a>__rt_lib_init_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001B))

<P><STRONG><a name="[dc5348]"></a>__rt_lib_init_getenv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001F))

<P><STRONG><a name="[dc5924]"></a>__rt_lib_init_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000006))

<P><STRONG><a name="[dc5780]"></a>__rt_lib_init_lc_collate_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000D))

<P><STRONG><a name="[dc5708]"></a>__rt_lib_init_lc_ctype_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000F))

<P><STRONG><a name="[dc5690]"></a>__rt_lib_init_lc_monetary_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000011))

<P><STRONG><a name="[dc5618]"></a>__rt_lib_init_lc_numeric_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000013))

<P><STRONG><a name="[dc55a0]"></a>__rt_lib_init_lc_time_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000015))

<P><STRONG><a name="[dc5834]"></a>__rt_lib_init_rand_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000A))

<P><STRONG><a name="[dc4fc4]"></a>__rt_lib_init_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002F))

<P><STRONG><a name="[dc54b0]"></a>__rt_lib_init_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000019))

<P><STRONG><a name="[dc52d0]"></a>__rt_lib_init_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000021))

<P><STRONG><a name="[dc58ac]"></a>__rt_lib_init_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000008))

<P><STRONG><a name="[dc30d4]"></a>__rt_lib_shutdown</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown.o(.ARM.Collect$$libshutdown$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[dc46dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_ls (via Veneer)
</UL>

<P><STRONG><a name="[14817fc]"></a>__rt_lib_shutdown_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000006))

<P><STRONG><a name="[148161c]"></a>__rt_lib_shutdown_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000E))

<P><STRONG><a name="[14815e0]"></a>__rt_lib_shutdown_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F))

<P><STRONG><a name="[1481748]"></a>__rt_lib_shutdown_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000009))

<P><STRONG><a name="[14818b0]"></a>__rt_lib_shutdown_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000003))

<P><STRONG><a name="[14816d0]"></a>__rt_lib_shutdown_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000B))

<P><STRONG><a name="[dc8390]"></a>__rt_entry</STRONG> (ARM, 0 bytes, Stack size unknown bytes, rtentry.o(.ARM.Collect$$rtentry$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[dc84bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
<LI><a href="#[1481220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_rt2
</UL>

<P><STRONG><a name="[dc7d78]"></a>__rt_entry_presh_1</STRONG> (ARM, 0 bytes, Stack size unknown bytes, rtentry2.o(.ARM.Collect$$rtentry$$00000002))

<P><STRONG><a name="[dc79f4]"></a>__rt_entry_sh</STRONG> (ARM, 0 bytes, Stack size unknown bytes, rtentry4.o(.ARM.Collect$$rtentry$$00000004))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __rt_entry_sh &rArr; __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[dc779c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[dc7cc4]"></a>__rt_entry_li</STRONG> (ARM, 0 bytes, Stack size unknown bytes, rtentry2.o(.ARM.Collect$$rtentry$$0000000A))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __rt_entry_li &rArr; __rt_lib_init &rArr; _fp_init
</UL>
<BR>[Calls]<UL><LI><a href="#[dc6fa4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init (via Veneer)
</UL>

<P><STRONG><a name="[dc7d00]"></a>__rt_entry_postsh_1</STRONG> (ARM, 0 bytes, Stack size unknown bytes, rtentry2.o(.ARM.Collect$$rtentry$$00000009))

<P><STRONG><a name="[dc7c10]"></a>__rt_entry_main</STRONG> (ARM, 0 bytes, Stack size unknown bytes, rtentry2.o(.ARM.Collect$$rtentry$$0000000D))
<BR><BR>[Calls]<UL><LI><a href="#[dc7634]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit (via BX)
</UL>

<P><STRONG><a name="[dc7c4c]"></a>__rt_entry_postli_1</STRONG> (ARM, 0 bytes, Stack size unknown bytes, rtentry2.o(.ARM.Collect$$rtentry$$0000000C))

<P><STRONG><a name="[dc6824]"></a>__rt_exit</STRONG> (ARM, 0 bytes, Stack size unknown bytes, rtexit.o(.ARM.Collect$$rtexit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[dc7634]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit (via Veneer)
</UL>

<P><STRONG><a name="[dc46dc]"></a>__rt_exit_ls</STRONG> (ARM, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000003))
<BR><BR>[Calls]<UL><LI><a href="#[dc30d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown (via Veneer)
</UL>

<P><STRONG><a name="[dc4718]"></a>__rt_exit_prels_1</STRONG> (ARM, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000002))

<P><STRONG><a name="[dc46a0]"></a>__rt_exit_exit</STRONG> (ARM, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[dc48f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
</UL>

<P><STRONG><a name="[dd05a4]"></a>__user_initial_stackheap</STRONG> (ARM, 0 bytes, Stack size unknown bytes, lpc2400.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[dc779c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[dcf488]"></a>TxEN_Init</STRONG> (ARM, 76 bytes, Stack size 8 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TxEN_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[dcf1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Tx1_EN
</UL>
<BR>[Called By]<UL><LI><a href="#[dcf3d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[dcf44c]"></a>IniWDT</STRONG> (ARM, 32 bytes, Stack size 0 bytes, main.o(.text), UNUSED)

<P><STRONG><a name="[dcf410]"></a>FeedWDT</STRONG> (ARM, 24 bytes, Stack size 0 bytes, main.o(.text), UNUSED)

<P><STRONG><a name="[dcf3d4]"></a>main</STRONG> (ARM, 80 bytes, Stack size 8 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = main &rArr; T1_recCheck &rArr; CRC16
</UL>
<BR>[Calls]<UL><LI><a href="#[dcf17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_SendData
<LI><a href="#[dcf1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_Ini
<LI><a href="#[dcf230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer1_Init
<LI><a href="#[dcf26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Time0Init
<LI><a href="#[dcf2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T1_recCheck
<LI><a href="#[dcf2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T1_check
<LI><a href="#[dcf320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T1_CheckSendHold
<LI><a href="#[dcf35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IOinit
<LI><a href="#[dcf398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckIOpin
<LI><a href="#[dcf488]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TxEN_Init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rtentry2.o(.ARM.Collect$$rtentry$$0000000D)
</UL>
<P><STRONG><a name="[dcea74]"></a>reverse_light</STRONG> (ARM, 84 bytes, Stack size 0 bytes, time.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[dce9fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ_Timer1
</UL>

<P><STRONG><a name="[dcea38]"></a>IRQ_Time0</STRONG> (ARM, 72 bytes, Stack size 8 bytes, time.o(.text), UNUSED)

<P><STRONG><a name="[dce9fc]"></a>IRQ_Timer1</STRONG> (ARM, 324 bytes, Stack size 16 bytes, time.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[dcea74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reverse_light
</UL>

<P><STRONG><a name="[dcf26c]"></a>Time0Init</STRONG> (ARM, 140 bytes, Stack size 0 bytes, time.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[dcf3d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[dcf230]"></a>Timer1_Init</STRONG> (ARM, 116 bytes, Stack size 0 bytes, time.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[dcf3d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[dcd82c]"></a>DelayNS</STRONG> (ARM, 44 bytes, Stack size 0 bytes, uart0.o(.text), UNUSED)

<P><STRONG><a name="[dcd7f0]"></a>IRQ_UART0</STRONG> (ARM, 272 bytes, Stack size 20 bytes, uart0.o(.text), UNUSED)

<P><STRONG><a name="[dcd7b4]"></a>UART0_Ini</STRONG> (ARM, 176 bytes, Stack size 0 bytes, uart0.o(.text), UNUSED)

<P><STRONG><a name="[dcd778]"></a>UART0_IniByBuad</STRONG> (ARM, 188 bytes, Stack size 0 bytes, uart0.o(.text), UNUSED)

<P><STRONG><a name="[dcd73c]"></a>CRC16</STRONG> (ARM, 92 bytes, Stack size 12 bytes, uart0.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = CRC16
</UL>
<BR>[Called By]<UL><LI><a href="#[dcc620]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadT1SendDataBuff
<LI><a href="#[dcc65c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadT1WriteHeartBuff
<LI><a href="#[dcc698]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadT1ReadHeartBuff
<LI><a href="#[dcd5d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T0_recCheck
<LI><a href="#[dcd64c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Load_sendBuffer
<LI><a href="#[dcf2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T1_recCheck
</UL>

<P><STRONG><a name="[dcd700]"></a>Tx0_EN</STRONG> (ARM, 100 bytes, Stack size 0 bytes, uart0.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[dcd610]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T0_check
</UL>

<P><STRONG><a name="[dcf1f4]"></a>Tx1_EN</STRONG> (ARM, 100 bytes, Stack size 0 bytes, uart0.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[dcf2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T1_check
<LI><a href="#[dcf320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T1_CheckSendHold
<LI><a href="#[dcf488]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TxEN_Init
</UL>

<P><STRONG><a name="[dcd6c4]"></a>Tx2_EN</STRONG> (ARM, 100 bytes, Stack size 0 bytes, uart0.o(.text), UNUSED)

<P><STRONG><a name="[dcd688]"></a>Tx3_EN</STRONG> (ARM, 116 bytes, Stack size 0 bytes, uart0.o(.text), UNUSED)

<P><STRONG><a name="[dcf320]"></a>T1_CheckSendHold</STRONG> (ARM, 112 bytes, Stack size 8 bytes, uart0.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = T1_CheckSendHold
</UL>
<BR>[Calls]<UL><LI><a href="#[dcf1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_Ini
<LI><a href="#[dcf1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Tx1_EN
</UL>
<BR>[Called By]<UL><LI><a href="#[dcf3d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[dcd64c]"></a>Load_sendBuffer</STRONG> (ARM, 116 bytes, Stack size 16 bytes, uart0.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[dcd73c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CRC16
</UL>
<BR>[Called By]<UL><LI><a href="#[dcd55c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QueryTheAddress
</UL>

<P><STRONG><a name="[dcd610]"></a>T0_check</STRONG> (ARM, 892 bytes, Stack size 4 bytes, uart0.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[dcd700]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Tx0_EN
</UL>

<P><STRONG><a name="[dcd5d4]"></a>T0_recCheck</STRONG> (ARM, 268 bytes, Stack size 8 bytes, uart0.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[dcd73c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CRC16
</UL>

<P><STRONG><a name="[dcd598]"></a>UART0_SendData</STRONG> (ARM, 80 bytes, Stack size 0 bytes, uart0.o(.text), UNUSED)

<P><STRONG><a name="[dcd55c]"></a>QueryTheAddress</STRONG> (ARM, 32 bytes, Stack size 4 bytes, uart0.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[dcd64c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Load_sendBuffer
</UL>

<P><STRONG><a name="[dcc6d4]"></a>IRQ_UART1</STRONG> (ARM, 272 bytes, Stack size 20 bytes, uart1.o(.text), UNUSED)

<P><STRONG><a name="[dcf1b8]"></a>UART1_Ini</STRONG> (ARM, 192 bytes, Stack size 0 bytes, uart1.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[dcf320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T1_CheckSendHold
<LI><a href="#[dcf3d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[dcf2e4]"></a>T1_check</STRONG> (ARM, 816 bytes, Stack size 8 bytes, uart1.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = T1_check
</UL>
<BR>[Calls]<UL><LI><a href="#[dcf1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Tx1_EN
</UL>
<BR>[Called By]<UL><LI><a href="#[dcf3d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[dcf2a8]"></a>T1_recCheck</STRONG> (ARM, 596 bytes, Stack size 8 bytes, uart1.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = T1_recCheck &rArr; CRC16
</UL>
<BR>[Calls]<UL><LI><a href="#[dcd73c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CRC16
</UL>
<BR>[Called By]<UL><LI><a href="#[dcf3d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[dcc698]"></a>LoadT1ReadHeartBuff</STRONG> (ARM, 124 bytes, Stack size 8 bytes, uart1.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[dcd73c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CRC16
</UL>

<P><STRONG><a name="[dcc65c]"></a>LoadT1WriteHeartBuff</STRONG> (ARM, 160 bytes, Stack size 8 bytes, uart1.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[dcd73c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CRC16
</UL>

<P><STRONG><a name="[dcc620]"></a>LoadT1SendDataBuff</STRONG> (ARM, 304 bytes, Stack size 32 bytes, uart1.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[dcd73c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CRC16
</UL>

<P><STRONG><a name="[dcf17c]"></a>UART1_SendData</STRONG> (ARM, 80 bytes, Stack size 0 bytes, uart1.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[dcf3d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[dcf35c]"></a>IOinit</STRONG> (ARM, 188 bytes, Stack size 0 bytes, iocontrol.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[dcf3d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[dc9e48]"></a>KS8_DelayOn</STRONG> (ARM, 56 bytes, Stack size 0 bytes, iocontrol.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[dc9e0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkWriteCMD
</UL>

<P><STRONG><a name="[dcb3d8]"></a>KS7_DelayOn</STRONG> (ARM, 56 bytes, Stack size 0 bytes, iocontrol.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[dc9e0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkWriteCMD
</UL>

<P><STRONG><a name="[dcb414]"></a>KS6_DelayOn</STRONG> (ARM, 56 bytes, Stack size 0 bytes, iocontrol.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[dc9e0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkWriteCMD
</UL>

<P><STRONG><a name="[dcb450]"></a>KS5_DelayOn</STRONG> (ARM, 56 bytes, Stack size 0 bytes, iocontrol.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[dc9e0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkWriteCMD
</UL>

<P><STRONG><a name="[dcb48c]"></a>KS4_DelayOn</STRONG> (ARM, 56 bytes, Stack size 0 bytes, iocontrol.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[dc9e0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkWriteCMD
</UL>

<P><STRONG><a name="[dcb4c8]"></a>KS3_DelayOn</STRONG> (ARM, 56 bytes, Stack size 0 bytes, iocontrol.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[dc9e0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkWriteCMD
<LI><a href="#[dcf398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckIOpin
</UL>

<P><STRONG><a name="[dcb504]"></a>KS2_DelayOn</STRONG> (ARM, 56 bytes, Stack size 0 bytes, iocontrol.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[dc9e0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkWriteCMD
<LI><a href="#[dcf398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckIOpin
</UL>

<P><STRONG><a name="[dcb540]"></a>KS1_DelayOn</STRONG> (ARM, 56 bytes, Stack size 0 bytes, iocontrol.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[dc9e0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkWriteCMD
<LI><a href="#[dcf398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckIOpin
</UL>

<P><STRONG><a name="[dc9e0c]"></a>checkWriteCMD</STRONG> (ARM, 176 bytes, Stack size 4 bytes, iocontrol.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[dc9e48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KS8_DelayOn
<LI><a href="#[dcb3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KS7_DelayOn
<LI><a href="#[dcb414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KS6_DelayOn
<LI><a href="#[dcb450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KS5_DelayOn
<LI><a href="#[dcb48c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KS4_DelayOn
<LI><a href="#[dcb4c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KS3_DelayOn
<LI><a href="#[dcb504]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KS2_DelayOn
<LI><a href="#[dcb540]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KS1_DelayOn
</UL>

<P><STRONG><a name="[dcf398]"></a>CheckIOpin</STRONG> (ARM, 404 bytes, Stack size 4 bytes, iocontrol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = CheckIOpin
</UL>
<BR>[Calls]<UL><LI><a href="#[dcb4c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KS3_DelayOn
<LI><a href="#[dcb504]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KS2_DelayOn
<LI><a href="#[dcb540]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KS1_DelayOn
</UL>
<BR>[Called By]<UL><LI><a href="#[dcf3d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[dc9dd0]"></a>refreshWriteBuff</STRONG> (ARM, 60 bytes, Stack size 0 bytes, iocontrol.o(.text), UNUSED)

<P><STRONG><a name="[dc8624]"></a>__use_two_region_memory</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[dc85e8]"></a>__rt_heap_escrow$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[dc85ac]"></a>__rt_heap_expand$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[dc779c]"></a>__user_setup_stackheap</STRONG> (ARM, 96 bytes, Stack size 8 bytes, sys_stackheap_outer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[dc6914]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_perproc_libspace
<LI><a href="#[dd05a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_initial_stackheap
</UL>
<BR>[Called By]<UL><LI><a href="#[dc79f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_sh
</UL>

<P><STRONG><a name="[dc7634]"></a>exit</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, exit.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[dc6824]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit (via Veneer)
<LI><a href="#[dc75bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_call_atexit_fns (Weak Reference)
</UL>
<BR>[Called By]<UL><LI><a href="#[dc7c10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[dc6950]"></a>__user_libspace</STRONG> (ARM, 12 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[dc6914]"></a>__user_perproc_libspace</STRONG> (ARM, 0 bytes, Stack size 0 bytes, libspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[dc779c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[dc68d8]"></a>__user_perthread_libspace</STRONG> (ARM, 0 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[dc48f8]"></a>_sys_exit</STRONG> (ARM, 20 bytes, Stack size 0 bytes, sys_exit.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[dc46a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_exit
</UL>

<P><STRONG><a name="[dc43d0]"></a>__rt_fp_status_addr</STRONG> (ARM, 16 bytes, Stack size 0 bytes, rt_fp_status_addr_intlibspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[dc4a60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_init
</UL>

<P><STRONG><a name="[dc3d04]"></a>__I$use$semihosting</STRONG> (ARM, 0 bytes, Stack size 0 bytes, use_no_semi.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> sys_exit.o(.text)
</UL>
<P><STRONG><a name="[dc3cc8]"></a>__use_no_semihosting_swi</STRONG> (ARM, 4 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[dc4a60]"></a>_fp_init</STRONG> (ARM, 24 bytes, Stack size 8 bytes, fpinit.o(x$fpl$fpinit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _fp_init
</UL>
<BR>[Calls]<UL><LI><a href="#[dc43d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_fp_status_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[dc6fa4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init (via Veneer)
</UL>

<P><STRONG><a name="[dc4a24]"></a>__fplib_config_pureend_doubles</STRONG> (ARM, 0 bytes, Stack size unknown bytes, fpinit.o(x$fpl$fpinit), UNUSED)
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[dd07c0]"></a>Undef_Handler</STRONG> (ARM, 4 bytes, Stack size unknown bytes, lpc2400.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[dd07c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Undef_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[dd07c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Undef_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lpc2400.o(RESET)
</UL>
<P><STRONG><a name="[dd0784]"></a>SWI_Handler</STRONG> (ARM, 4 bytes, Stack size unknown bytes, lpc2400.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[dd0784]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SWI_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[dd0784]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SWI_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lpc2400.o(RESET)
</UL>
<P><STRONG><a name="[dd0748]"></a>PAbt_Handler</STRONG> (ARM, 4 bytes, Stack size unknown bytes, lpc2400.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[dd0748]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PAbt_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[dd0748]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PAbt_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lpc2400.o(RESET)
</UL>
<P><STRONG><a name="[dd070c]"></a>DAbt_Handler</STRONG> (ARM, 4 bytes, Stack size unknown bytes, lpc2400.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[dd070c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DAbt_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[dd070c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DAbt_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lpc2400.o(RESET)
</UL>
<P><STRONG><a name="[dd06d0]"></a>IRQ_Handler</STRONG> (ARM, 4 bytes, Stack size unknown bytes, lpc2400.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[dd06d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[dd06d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lpc2400.o(RESET)
</UL>
<P><STRONG><a name="[dd0694]"></a>FIQ_Handler</STRONG> (ARM, 4 bytes, Stack size unknown bytes, lpc2400.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[dd0694]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FIQ_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[dd0694]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FIQ_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lpc2400.o(RESET)
</UL><P>
<H3>
Undefined Global Symbols
</H3>
<P><STRONG><a name="[dc75bc]"></a>_call_atexit_fns</STRONG> (ARM, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[dc7634]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>
<HR></body></html>
