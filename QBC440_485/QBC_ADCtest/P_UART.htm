<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [F:\zxs_ARMV4\QBC_ADCtest\P_UART.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image F:\zxs_ARMV4\QBC_ADCtest\P_UART.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 4.1 [Build 894]: Last Updated: Mon Mar 19 16:45:19 2012
<BR><P>
<H3>Maximum Stack Usage =          8 bytes + Unknown(Functions without stacksize, Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
__rt_lib_init &rArr; _fp_init
<P>
<H3>
Functions with no stack information
</H3><UL>
 <LI><a href="#[3]">Reset_Handler</a>
 <LI><a href="#[55]">__user_initial_stackheap</a>
 <LI><a href="#[4]">Undef_Handler</a>
 <LI><a href="#[5]">SWI_Handler</a>
 <LI><a href="#[6]">PAbt_Handler</a>
 <LI><a href="#[7]">DAbt_Handler</a>
 <LI><a href="#[8]">IRQ_Handler</a>
 <LI><a href="#[9]">FIQ_Handler</a>
</UL>
</UL>
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[4]">Undef_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4]">Undef_Handler</a><BR>
 <LI><a href="#[5]">SWI_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[5]">SWI_Handler</a><BR>
 <LI><a href="#[6]">PAbt_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[6]">PAbt_Handler</a><BR>
 <LI><a href="#[7]">DAbt_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[7]">DAbt_Handler</a><BR>
 <LI><a href="#[8]">IRQ_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[8]">IRQ_Handler</a><BR>
 <LI><a href="#[9]">FIQ_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[9]">FIQ_Handler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[7]">DAbt_Handler</a> from lpc2400.o(RESET) referenced from lpc2400.o(RESET)
 <LI><a href="#[9]">FIQ_Handler</a> from lpc2400.o(RESET) referenced from lpc2400.o(RESET)
 <LI><a href="#[8]">IRQ_Handler</a> from lpc2400.o(RESET) referenced from lpc2400.o(RESET)
 <LI><a href="#[6]">PAbt_Handler</a> from lpc2400.o(RESET) referenced from lpc2400.o(RESET)
 <LI><a href="#[3]">Reset_Handler</a> from lpc2400.o(RESET) referenced from lpc2400.o(RESET)
 <LI><a href="#[5]">SWI_Handler</a> from lpc2400.o(RESET) referenced from lpc2400.o(RESET)
 <LI><a href="#[4]">Undef_Handler</a> from lpc2400.o(RESET) referenced from lpc2400.o(RESET)
 <LI><a href="#[c]">__main</a> from __main.o(!!!main) referenced from lpc2400.o(RESET)
 <LI><a href="#[b]">main</a> from main.o(.text) referenced from rtentry2.o(.ARM.Collect$$rtentry$$0000000D)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[3]"></a>Reset_Handler</STRONG> (ARM, 0 bytes, Stack size unknown bytes, lpc2400.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> lpc2400.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>__main</STRONG> (ARM, 8 bytes, Stack size 0 bytes, __main.o(!!!main))
<BR><BR>[Calls]<UL><LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
<LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[d]"></a>__scatterload</STRONG> (ARM, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter))
<BR><BR>[Called By]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[f]"></a>__scatterload_rt2</STRONG> (ARM, 52 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[5d]"></a>__scatterload_null</STRONG> (ARM, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[10]"></a>__scatterload_copy</STRONG> (ARM, 40 bytes, Stack size unknown bytes, __scatter_copy.o(!!handler_copy), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>
<BR>[Called By]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>

<P><STRONG><a name="[5e]"></a>__scatterload_zeroinit</STRONG> (ARM, 44 bytes, Stack size unknown bytes, __scatter_zi.o(!!handler_zi), UNUSED)

<P><STRONG><a name="[11]"></a>__rt_lib_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit.o(.ARM.Collect$$libinit$$00000000))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __rt_lib_init &rArr; _fp_init
</UL>
<BR>[Calls]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_init (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_li (via Veneer)
</UL>

<P><STRONG><a name="[5f]"></a>__rt_lib_init_alloca_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002A))

<P><STRONG><a name="[60]"></a>__rt_lib_init_argv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000028))

<P><STRONG><a name="[61]"></a>__rt_lib_init_atexit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000017))

<P><STRONG><a name="[62]"></a>__rt_lib_init_clock_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001D))

<P><STRONG><a name="[63]"></a>__rt_lib_init_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002E))

<P><STRONG><a name="[64]"></a>__rt_lib_init_exceptions_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002C))

<P><STRONG><a name="[65]"></a>__rt_lib_init_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001B))

<P><STRONG><a name="[66]"></a>__rt_lib_init_getenv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001F))

<P><STRONG><a name="[67]"></a>__rt_lib_init_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000006))

<P><STRONG><a name="[68]"></a>__rt_lib_init_lc_collate_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000D))

<P><STRONG><a name="[69]"></a>__rt_lib_init_lc_ctype_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000F))

<P><STRONG><a name="[6a]"></a>__rt_lib_init_lc_monetary_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000011))

<P><STRONG><a name="[6b]"></a>__rt_lib_init_lc_numeric_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000013))

<P><STRONG><a name="[6c]"></a>__rt_lib_init_lc_time_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000015))

<P><STRONG><a name="[6d]"></a>__rt_lib_init_rand_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000A))

<P><STRONG><a name="[6e]"></a>__rt_lib_init_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002F))

<P><STRONG><a name="[6f]"></a>__rt_lib_init_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000019))

<P><STRONG><a name="[70]"></a>__rt_lib_init_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000021))

<P><STRONG><a name="[71]"></a>__rt_lib_init_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000008))

<P><STRONG><a name="[19]"></a>__rt_lib_shutdown</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown.o(.ARM.Collect$$libshutdown$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_ls (via Veneer)
</UL>

<P><STRONG><a name="[72]"></a>__rt_lib_shutdown_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000006))

<P><STRONG><a name="[73]"></a>__rt_lib_shutdown_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000E))

<P><STRONG><a name="[74]"></a>__rt_lib_shutdown_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F))

<P><STRONG><a name="[75]"></a>__rt_lib_shutdown_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000009))

<P><STRONG><a name="[76]"></a>__rt_lib_shutdown_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000003))

<P><STRONG><a name="[77]"></a>__rt_lib_shutdown_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000B))

<P><STRONG><a name="[e]"></a>__rt_entry</STRONG> (ARM, 0 bytes, Stack size unknown bytes, rtentry.o(.ARM.Collect$$rtentry$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
<LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_rt2
</UL>

<P><STRONG><a name="[78]"></a>__rt_entry_presh_1</STRONG> (ARM, 0 bytes, Stack size unknown bytes, rtentry2.o(.ARM.Collect$$rtentry$$00000002))

<P><STRONG><a name="[13]"></a>__rt_entry_sh</STRONG> (ARM, 0 bytes, Stack size unknown bytes, rtentry4.o(.ARM.Collect$$rtentry$$00000004))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __rt_entry_sh &rArr; __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[15]"></a>__rt_entry_li</STRONG> (ARM, 0 bytes, Stack size unknown bytes, rtentry2.o(.ARM.Collect$$rtentry$$0000000A))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __rt_entry_li &rArr; __rt_lib_init &rArr; _fp_init
</UL>
<BR>[Calls]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init (via Veneer)
</UL>

<P><STRONG><a name="[79]"></a>__rt_entry_postsh_1</STRONG> (ARM, 0 bytes, Stack size unknown bytes, rtentry2.o(.ARM.Collect$$rtentry$$00000009))

<P><STRONG><a name="[16]"></a>__rt_entry_main</STRONG> (ARM, 0 bytes, Stack size unknown bytes, rtentry2.o(.ARM.Collect$$rtentry$$0000000D))
<BR><BR>[Calls]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit (via BX)
</UL>

<P><STRONG><a name="[7a]"></a>__rt_entry_postli_1</STRONG> (ARM, 0 bytes, Stack size unknown bytes, rtentry2.o(.ARM.Collect$$rtentry$$0000000C))

<P><STRONG><a name="[57]"></a>__rt_exit</STRONG> (ARM, 0 bytes, Stack size unknown bytes, rtexit.o(.ARM.Collect$$rtexit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit (via Veneer)
</UL>

<P><STRONG><a name="[18]"></a>__rt_exit_ls</STRONG> (ARM, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000003))
<BR><BR>[Calls]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown (via Veneer)
</UL>

<P><STRONG><a name="[7b]"></a>__rt_exit_prels_1</STRONG> (ARM, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000002))

<P><STRONG><a name="[1a]"></a>__rt_exit_exit</STRONG> (ARM, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit (via Veneer)
</UL>

<P><STRONG><a name="[55]"></a>__user_initial_stackheap</STRONG> (ARM, 0 bytes, Stack size unknown bytes, lpc2400.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[24]"></a>IOInit</STRONG> (ARM, 60 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1c]"></a>TxEN_Init</STRONG> (ARM, 76 bytes, Stack size 8 bytes, main.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Tx1_EN
</UL>

<P><STRONG><a name="[7c]"></a>IRQ_ADC</STRONG> (ARM, 112 bytes, Stack size 8 bytes, main.o(.text), UNUSED)

<P><STRONG><a name="[1f]"></a>UART0_SendByte</STRONG> (ARM, 32 bytes, Stack size 0 bytes, main.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reverse_light2
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PC_DispChar
</UL>

<P><STRONG><a name="[1e]"></a>PC_DispChar</STRONG> (ARM, 60 bytes, Stack size 12 bytes, main.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0_SendByte
</UL>
<BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ISendStr
</UL>

<P><STRONG><a name="[23]"></a>UART0_IniDft</STRONG> (ARM, 96 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[20]"></a>ISendStr</STRONG> (ARM, 104 bytes, Stack size 20 bytes, main.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PC_DispChar
</UL>

<P><STRONG><a name="[7d]"></a>ADCIni</STRONG> (ARM, 100 bytes, Stack size 0 bytes, main.o(.text), UNUSED)

<P><STRONG><a name="[7e]"></a>IniWDT</STRONG> (ARM, 32 bytes, Stack size 0 bytes, main.o(.text), UNUSED)

<P><STRONG><a name="[7f]"></a>FeedWDT</STRONG> (ARM, 24 bytes, Stack size 0 bytes, main.o(.text), UNUSED)

<P><STRONG><a name="[80]"></a>delay</STRONG> (ARM, 24 bytes, Stack size 0 bytes, main.o(.text), UNUSED)

<P><STRONG><a name="[21]"></a>reverse_light2</STRONG> (ARM, 148 bytes, Stack size 8 bytes, main.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0_SendByte
</UL>

<P><STRONG><a name="[81]"></a>Timer0_CapInt</STRONG> (ARM, 160 bytes, Stack size 8 bytes, main.o(.text), UNUSED)

<P><STRONG><a name="[82]"></a>iniCapTime0</STRONG> (ARM, 120 bytes, Stack size 0 bytes, main.o(.text), UNUSED)

<P><STRONG><a name="[b]"></a>main</STRONG> (ARM, 20 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer1_Init
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0_IniDft
<LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IOInit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rtentry2.o(.ARM.Collect$$rtentry$$0000000D)
</UL>
<P><STRONG><a name="[2c]"></a>reverse_light</STRONG> (ARM, 84 bytes, Stack size 0 bytes, time.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ_Timer1
</UL>

<P><STRONG><a name="[26]"></a>IRQ_Time0</STRONG> (ARM, 48 bytes, Stack size 24 bytes, time.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T3_check
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2_check
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T1_check
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T0_check
</UL>

<P><STRONG><a name="[2b]"></a>IRQ_Timer1</STRONG> (ARM, 280 bytes, Stack size 16 bytes, time.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reverse_light
</UL>

<P><STRONG><a name="[83]"></a>Time0Init</STRONG> (ARM, 152 bytes, Stack size 0 bytes, time.o(.text), UNUSED)

<P><STRONG><a name="[25]"></a>Timer1_Init</STRONG> (ARM, 116 bytes, Stack size 0 bytes, time.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[84]"></a>DelayNS</STRONG> (ARM, 44 bytes, Stack size 0 bytes, uart0.o(.text), UNUSED)

<P><STRONG><a name="[85]"></a>IRQ_UART0</STRONG> (ARM, 264 bytes, Stack size 20 bytes, uart0.o(.text), UNUSED)

<P><STRONG><a name="[86]"></a>UART0_Ini</STRONG> (ARM, 176 bytes, Stack size 0 bytes, uart0.o(.text), UNUSED)

<P><STRONG><a name="[87]"></a>UART0_IniByBuad</STRONG> (ARM, 192 bytes, Stack size 0 bytes, uart0.o(.text), UNUSED)

<P><STRONG><a name="[2e]"></a>CRC16</STRONG> (ARM, 96 bytes, Stack size 12 bytes, uart0.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T3_recCheck
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadT3_sendBuff
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2_recCheck
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART2_SendData
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadT1SendDataBuff
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadT1WriteHeartBuff
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadT1ReadHeartBuff
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T1_recCheck
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T0_recCheck
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Load_sendBuffer
</UL>

<P><STRONG><a name="[2f]"></a>Tx0_EN</STRONG> (ARM, 100 bytes, Stack size 0 bytes, uart0.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T0_check
</UL>

<P><STRONG><a name="[1d]"></a>Tx1_EN</STRONG> (ARM, 100 bytes, Stack size 0 bytes, uart0.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T1_check
<LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TxEN_Init
</UL>

<P><STRONG><a name="[3d]"></a>Tx2_EN</STRONG> (ARM, 100 bytes, Stack size 0 bytes, uart0.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2_check
</UL>

<P><STRONG><a name="[47]"></a>Tx3_EN</STRONG> (ARM, 116 bytes, Stack size 0 bytes, uart0.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T3_check
</UL>

<P><STRONG><a name="[2d]"></a>Load_sendBuffer</STRONG> (ARM, 116 bytes, Stack size 16 bytes, uart0.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CRC16
</UL>
<BR>[Called By]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QueryTheAddress
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0_SendData
</UL>

<P><STRONG><a name="[27]"></a>T0_check</STRONG> (ARM, 1092 bytes, Stack size 4 bytes, uart0.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Tx0_EN
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ_Time0
</UL>

<P><STRONG><a name="[31]"></a>ReFreshBuff</STRONG> (ARM, 60 bytes, Stack size 0 bytes, uart0.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T0_recCheck
</UL>

<P><STRONG><a name="[30]"></a>T0_recCheck</STRONG> (ARM, 868 bytes, Stack size 24 bytes, uart0.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadLL3DatatoSendtoJOS2
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadLL2DatatoSendtoJOS2
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadLL1DatatoSendtoJOS2
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KS2_DelayOn
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KS1_DelayOn
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReFreshBuff
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CRC16
</UL>

<P><STRONG><a name="[37]"></a>UART0_SendData</STRONG> (ARM, 868 bytes, Stack size 4 bytes, uart0.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Load_sendBuffer
</UL>

<P><STRONG><a name="[38]"></a>QueryTheAddress</STRONG> (ARM, 32 bytes, Stack size 4 bytes, uart0.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Load_sendBuffer
</UL>

<P><STRONG><a name="[88]"></a>IRQ_UART1</STRONG> (ARM, 272 bytes, Stack size 20 bytes, uart1.o(.text), UNUSED)

<P><STRONG><a name="[89]"></a>UART1_Ini</STRONG> (ARM, 192 bytes, Stack size 0 bytes, uart1.o(.text), UNUSED)

<P><STRONG><a name="[28]"></a>T1_check</STRONG> (ARM, 812 bytes, Stack size 8 bytes, uart1.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Tx1_EN
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ_Time0
</UL>

<P><STRONG><a name="[39]"></a>T1_recCheck</STRONG> (ARM, 916 bytes, Stack size 24 bytes, uart1.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CRC16
</UL>

<P><STRONG><a name="[3a]"></a>LoadT1ReadHeartBuff</STRONG> (ARM, 124 bytes, Stack size 8 bytes, uart1.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CRC16
</UL>

<P><STRONG><a name="[3b]"></a>LoadT1WriteHeartBuff</STRONG> (ARM, 160 bytes, Stack size 8 bytes, uart1.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CRC16
</UL>

<P><STRONG><a name="[3c]"></a>LoadT1SendDataBuff</STRONG> (ARM, 304 bytes, Stack size 32 bytes, uart1.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CRC16
</UL>

<P><STRONG><a name="[8a]"></a>UART1_SendData</STRONG> (ARM, 120 bytes, Stack size 0 bytes, uart1.o(.text), UNUSED)

<P><STRONG><a name="[8b]"></a>IRQ_UART2</STRONG> (ARM, 264 bytes, Stack size 20 bytes, uart2.o(.text), UNUSED)

<P><STRONG><a name="[8c]"></a>UART2_Ini</STRONG> (ARM, 196 bytes, Stack size 0 bytes, uart2.o(.text), UNUSED)

<P><STRONG><a name="[29]"></a>T2_check</STRONG> (ARM, 884 bytes, Stack size 8 bytes, uart2.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KS3_DelayOn
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Tx2_EN
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ_Time0
</UL>

<P><STRONG><a name="[40]"></a>Load_switchToAFCdataBuff</STRONG> (ARM, 444 bytes, Stack size 0 bytes, uart2.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART2_SendData
</UL>

<P><STRONG><a name="[3f]"></a>UART2_SendData</STRONG> (ARM, 484 bytes, Stack size 8 bytes, uart2.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Load_switchToAFCdataBuff
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CRC16
</UL>

<P><STRONG><a name="[41]"></a>T2_recCheck</STRONG> (ARM, 972 bytes, Stack size 8 bytes, uart2.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateNewJOSdata
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KS7_DelayOn
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KS6_DelayOn
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KS5_DelayOn
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KS4_DelayOn
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KS3_DelayOn
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KS2_DelayOn
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KS1_DelayOn
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CRC16
</UL>

<P><STRONG><a name="[8d]"></a>IRQ_UART3</STRONG> (ARM, 264 bytes, Stack size 20 bytes, uart3.o(.text), UNUSED)

<P><STRONG><a name="[8e]"></a>UART3_Ini</STRONG> (ARM, 196 bytes, Stack size 0 bytes, uart3.o(.text), UNUSED)

<P><STRONG><a name="[2a]"></a>T3_check</STRONG> (ARM, 652 bytes, Stack size 8 bytes, uart3.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Tx3_EN
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ_Time0
</UL>

<P><STRONG><a name="[48]"></a>LoadT3_sendBuff</STRONG> (ARM, 332 bytes, Stack size 8 bytes, uart3.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CRC16
</UL>
<BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T3_recCheck
</UL>

<P><STRONG><a name="[4b]"></a>GetUart3KeyInfo</STRONG> (ARM, 184 bytes, Stack size 0 bytes, uart3.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T3_recCheck
</UL>

<P><STRONG><a name="[49]"></a>T3_recCheck</STRONG> (ARM, 544 bytes, Stack size 8 bytes, uart3.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateOldLLdata
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetUart3KeyInfo
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadT3_sendBuff
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CRC16
</UL>

<P><STRONG><a name="[8f]"></a>IOinit</STRONG> (ARM, 188 bytes, Stack size 0 bytes, iocontrol.o(.text), UNUSED)

<P><STRONG><a name="[4d]"></a>KS8_DelayOn</STRONG> (ARM, 56 bytes, Stack size 0 bytes, iocontrol.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkWriteCMD
</UL>

<P><STRONG><a name="[45]"></a>KS7_DelayOn</STRONG> (ARM, 56 bytes, Stack size 0 bytes, iocontrol.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkWriteCMD
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateNewJOSdata
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2_recCheck
</UL>

<P><STRONG><a name="[44]"></a>KS6_DelayOn</STRONG> (ARM, 56 bytes, Stack size 0 bytes, iocontrol.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateNewLLdata
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkWriteCMD
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateNewJOSdata
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2_recCheck
</UL>

<P><STRONG><a name="[43]"></a>KS5_DelayOn</STRONG> (ARM, 56 bytes, Stack size 0 bytes, iocontrol.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateNewLLdata
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkWriteCMD
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateNewJOSdata
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2_recCheck
</UL>

<P><STRONG><a name="[42]"></a>KS4_DelayOn</STRONG> (ARM, 56 bytes, Stack size 0 bytes, iocontrol.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateNewLLdata
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkWriteCMD
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateNewJOSdata
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2_recCheck
</UL>

<P><STRONG><a name="[3e]"></a>KS3_DelayOn</STRONG> (ARM, 56 bytes, Stack size 0 bytes, iocontrol.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkWriteCMD
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateNewJOSdata
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2_recCheck
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2_check
</UL>

<P><STRONG><a name="[32]"></a>KS2_DelayOn</STRONG> (ARM, 56 bytes, Stack size 0 bytes, iocontrol.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkWriteCMD
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateNewJOSdata
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2_recCheck
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T0_recCheck
</UL>

<P><STRONG><a name="[33]"></a>KS1_DelayOn</STRONG> (ARM, 56 bytes, Stack size 0 bytes, iocontrol.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkWriteCMD
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateNewJOSdata
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2_recCheck
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T0_recCheck
</UL>

<P><STRONG><a name="[4c]"></a>checkWriteCMD</STRONG> (ARM, 176 bytes, Stack size 4 bytes, iocontrol.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KS8_DelayOn
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KS7_DelayOn
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KS6_DelayOn
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KS5_DelayOn
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KS4_DelayOn
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KS3_DelayOn
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KS2_DelayOn
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KS1_DelayOn
</UL>

<P><STRONG><a name="[90]"></a>CheckIOpin</STRONG> (ARM, 300 bytes, Stack size 0 bytes, iocontrol.o(.text), UNUSED)

<P><STRONG><a name="[91]"></a>refreshWriteBuff</STRONG> (ARM, 60 bytes, Stack size 0 bytes, iocontrol.o(.text), UNUSED)

<P><STRONG><a name="[46]"></a>UpdateNewJOSdata</STRONG> (ARM, 112 bytes, Stack size 8 bytes, keydatatosend.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KS7_DelayOn
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KS6_DelayOn
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KS5_DelayOn
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KS4_DelayOn
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KS3_DelayOn
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KS2_DelayOn
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KS1_DelayOn
</UL>
<BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2_recCheck
</UL>

<P><STRONG><a name="[4e]"></a>UpdateNewLLdata</STRONG> (ARM, 252 bytes, Stack size 8 bytes, keydatatosend.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KS6_DelayOn
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KS5_DelayOn
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KS4_DelayOn
</UL>

<P><STRONG><a name="[4a]"></a>UpdateOldLLdata</STRONG> (ARM, 16 bytes, Stack size 0 bytes, keydatatosend.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T3_recCheck
</UL>

<P><STRONG><a name="[92]"></a>UpdateOldJOSdata</STRONG> (ARM, 4 bytes, Stack size 0 bytes, keydatatosend.o(.text), UNUSED)

<P><STRONG><a name="[51]"></a>changeBit</STRONG> (ARM, 120 bytes, Stack size 8 bytes, keydatatosend.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadLL3DatatoSendtoJOS2
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadLL2DatatoSendtoJOS2
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadLL1DatatoSendtoJOS2
</UL>

<P><STRONG><a name="[53]"></a>RchangeBit</STRONG> (ARM, 120 bytes, Stack size 8 bytes, keydatatosend.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadLL3DatatoSendtoJOS2
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadLL2DatatoSendtoJOS2
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadLL1DatatoSendtoJOS2
</UL>

<P><STRONG><a name="[50]"></a>XianDaoSetnew</STRONG> (ARM, 108 bytes, Stack size 0 bytes, keydatatosend.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XianDaoSet
</UL>

<P><STRONG><a name="[4f]"></a>XianDaoSet</STRONG> (ARM, 180 bytes, Stack size 12 bytes, keydatatosend.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XianDaoSetnew
</UL>
<BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadLL3DatatoSendtoJOS2
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadLL2DatatoSendtoJOS2
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadLL1DatatoSendtoJOS2
</UL>

<P><STRONG><a name="[34]"></a>LoadLL1DatatoSendtoJOS2</STRONG> (ARM, 4492 bytes, Stack size 8 bytes, keydatatosend.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XianDaoSet
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RchangeBit
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;changeBit
</UL>
<BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T0_recCheck
</UL>

<P><STRONG><a name="[35]"></a>LoadLL2DatatoSendtoJOS2</STRONG> (ARM, 2948 bytes, Stack size 8 bytes, keydatatosend.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XianDaoSet
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RchangeBit
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;changeBit
</UL>
<BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T0_recCheck
</UL>

<P><STRONG><a name="[36]"></a>LoadLL3DatatoSendtoJOS2</STRONG> (ARM, 5052 bytes, Stack size 8 bytes, keydatatosend.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XianDaoSet
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RchangeBit
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;changeBit
</UL>
<BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T0_recCheck
</UL>

<P><STRONG><a name="[93]"></a>__aeabi_idiv</STRONG> (ARM, 0 bytes, Stack size 8 bytes, aeabi_sdiv.o(.text), UNUSED)

<P><STRONG><a name="[52]"></a>__aeabi_idivmod</STRONG> (ARM, 384 bytes, Stack size 8 bytes, aeabi_sdiv.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadLL3DatatoSendtoJOS2
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadLL2DatatoSendtoJOS2
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadLL1DatatoSendtoJOS2
</UL>

<P><STRONG><a name="[94]"></a>__use_two_region_memory</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[95]"></a>__rt_heap_escrow$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[96]"></a>__rt_heap_expand$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[14]"></a>__user_setup_stackheap</STRONG> (ARM, 96 bytes, Stack size 8 bytes, sys_stackheap_outer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_perproc_libspace
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_initial_stackheap
</UL>
<BR>[Called By]<UL><LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_sh
</UL>

<P><STRONG><a name="[17]"></a>exit</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, exit.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit (via Veneer)
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_call_atexit_fns (Weak Reference)
</UL>
<BR>[Called By]<UL><LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[97]"></a>__user_libspace</STRONG> (ARM, 12 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[54]"></a>__user_perproc_libspace</STRONG> (ARM, 0 bytes, Stack size 0 bytes, libspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[98]"></a>__user_perthread_libspace</STRONG> (ARM, 0 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[1b]"></a>_sys_exit</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, sys_exit.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_exit (via Veneer)
</UL>

<P><STRONG><a name="[5c]"></a>__rt_fp_status_addr</STRONG> (ARM, 12 bytes, Stack size 0 bytes, rt_fp_status_addr_intlibspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_init
</UL>

<P><STRONG><a name="[99]"></a>__I$use$semihosting</STRONG> (ARM, 0 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[9a]"></a>__use_no_semihosting_swi</STRONG> (ARM, 4 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[9b]"></a>__aeabi_uidiv</STRONG> (ARM, 0 bytes, Stack size 0 bytes, aeabi_sdiv.o(.text_udiv), UNUSED)

<P><STRONG><a name="[22]"></a>__aeabi_uidivmod</STRONG> (ARM, 36 bytes, Stack size 0 bytes, aeabi_sdiv.o(.text_udiv), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__arm_div_large
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__arm_div2
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__arm_div5
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__arm_div8
</UL>
<BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reverse_light2
</UL>

<P><STRONG><a name="[9c]"></a>__semihosting_library_function</STRONG> (ARM, 0 bytes, Stack size 0 bytes, indicate_semi.o(.text), UNUSED)

<P><STRONG><a name="[12]"></a>_fp_init</STRONG> (ARM, 24 bytes, Stack size 8 bytes, fpinit.o(x$fpl$fpinit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _fp_init
</UL>
<BR>[Calls]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_fp_status_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init (via Veneer)
</UL>

<P><STRONG><a name="[9d]"></a>__fplib_config_pureend_doubles</STRONG> (ARM, 0 bytes, Stack size unknown bytes, fpinit.o(x$fpl$fpinit), UNUSED)
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[4]"></a>Undef_Handler</STRONG> (ARM, 4 bytes, Stack size unknown bytes, lpc2400.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Undef_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Undef_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lpc2400.o(RESET)
</UL>
<P><STRONG><a name="[5]"></a>SWI_Handler</STRONG> (ARM, 4 bytes, Stack size unknown bytes, lpc2400.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SWI_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SWI_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lpc2400.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>PAbt_Handler</STRONG> (ARM, 4 bytes, Stack size unknown bytes, lpc2400.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PAbt_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PAbt_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lpc2400.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>DAbt_Handler</STRONG> (ARM, 4 bytes, Stack size unknown bytes, lpc2400.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DAbt_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DAbt_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lpc2400.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>IRQ_Handler</STRONG> (ARM, 4 bytes, Stack size unknown bytes, lpc2400.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lpc2400.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>FIQ_Handler</STRONG> (ARM, 4 bytes, Stack size unknown bytes, lpc2400.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FIQ_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FIQ_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lpc2400.o(RESET)
</UL>
<P><STRONG><a name="[5a]"></a>__arm_div8</STRONG> (ARM, 0 bytes, Stack size unknown bytes, aeabi_sdiv.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>

<P><STRONG><a name="[59]"></a>__arm_div5</STRONG> (ARM, 0 bytes, Stack size unknown bytes, aeabi_sdiv.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>

<P><STRONG><a name="[58]"></a>__arm_div2</STRONG> (ARM, 0 bytes, Stack size unknown bytes, aeabi_sdiv.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>

<P><STRONG><a name="[5b]"></a>__arm_div_large</STRONG> (ARM, 0 bytes, Stack size unknown bytes, aeabi_sdiv.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<P>
<H3>
Undefined Global Symbols
</H3>
<P><STRONG><a name="[56]"></a>_call_atexit_fns</STRONG> (ARM, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>
<HR></body></html>
