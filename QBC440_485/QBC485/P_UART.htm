<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [F:\zxs_ARMV4\QBC485\P_UART.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image F:\zxs_ARMV4\QBC485\P_UART.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, RVCT4.0 [Build 728]: Last Updated: Mon May 07 10:05:18 2012
<BR><P>
<H3>Maximum Stack Usage =         44 bytes + Unknown(Functions without stacksize, Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
main &rArr; T1_recCheck &rArr; CRC16
<P>
<H3>
Functions with no stack information
</H3><UL>
 <LI><a href="#[dd0568]">Reset_Handler</a>
 <LI><a href="#[dd05a4]">__user_initial_stackheap</a>
 <LI><a href="#[dd07c0]">Undef_Handler</a>
 <LI><a href="#[dd0784]">SWI_Handler</a>
 <LI><a href="#[dd0748]">PAbt_Handler</a>
 <LI><a href="#[dd070c]">DAbt_Handler</a>
 <LI><a href="#[dd06d0]">IRQ_Handler</a>
 <LI><a href="#[dd0694]">FIQ_Handler</a>
</UL>
</UL>
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[dd07c0]">Undef_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[dd07c0]">Undef_Handler</a><BR>
 <LI><a href="#[dd0784]">SWI_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[dd0784]">SWI_Handler</a><BR>
 <LI><a href="#[dd0748]">PAbt_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[dd0748]">PAbt_Handler</a><BR>
 <LI><a href="#[dd070c]">DAbt_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[dd070c]">DAbt_Handler</a><BR>
 <LI><a href="#[dd06d0]">IRQ_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[dd06d0]">IRQ_Handler</a><BR>
 <LI><a href="#[dd0694]">FIQ_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[dd0694]">FIQ_Handler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[dd0568]">Reset_Handler</a>
 <LI><a href="#[dd07c0]">Undef_Handler</a>
 <LI><a href="#[dd0784]">SWI_Handler</a>
 <LI><a href="#[dd0748]">PAbt_Handler</a>
 <LI><a href="#[dd070c]">DAbt_Handler</a>
 <LI><a href="#[dd06d0]">IRQ_Handler</a>
 <LI><a href="#[dd0694]">FIQ_Handler</a>
 <LI><a href="#[dc86d8]">__main</a>
 <LI><a href="#[dcf410]">main</a>
 <LI><a href="#[dc3f20]">__I$use$semihosting</a>
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[dd0568]"></a>Reset_Handler</STRONG> (ARM, 0 bytes, Stack size unknown bytes, lpc2400.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> lpc2400.o(RESET)
</UL>
<P><STRONG><a name="[dc86d8]"></a>__main</STRONG> (ARM, 8 bytes, Stack size 0 bytes, __main.o(!!!main))
<BR><BR>[Calls]<UL><LI><a href="#[dc85ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
<LI><a href="#[1483478]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[1483478]"></a>__scatterload</STRONG> (ARM, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter))
<BR><BR>[Called By]<UL><LI><a href="#[dc86d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[148343c]"></a>__scatterload_rt2</STRONG> (ARM, 52 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[dc85ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[1483400]"></a>__scatterload_null</STRONG> (ARM, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[148325c]"></a>__scatterload_copy</STRONG> (ARM, 40 bytes, Stack size unknown bytes, __scatter_copy.o(!!handler_copy), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[148325c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>
<BR>[Called By]<UL><LI><a href="#[148325c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>

<P><STRONG><a name="[148316c]"></a>__scatterload_zeroinit</STRONG> (ARM, 44 bytes, Stack size unknown bytes, __scatter_zi.o(!!handler_zi), UNUSED)

<P><STRONG><a name="[dc71c0]"></a>__rt_lib_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit.o(.ARM.Collect$$libinit$$00000000))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __rt_lib_init &rArr; _fp_init
</UL>
<BR>[Calls]<UL><LI><a href="#[dc4c7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_init (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[dc7ee0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_li (via Veneer)
</UL>

<P><STRONG><a name="[dc530c]"></a>__rt_lib_init_alloca_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002A))

<P><STRONG><a name="[dc5384]"></a>__rt_lib_init_argv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000028))

<P><STRONG><a name="[dc5744]"></a>__rt_lib_init_atexit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000017))

<P><STRONG><a name="[dc55dc]"></a>__rt_lib_init_clock_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001D))

<P><STRONG><a name="[dc521c]"></a>__rt_lib_init_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002E))

<P><STRONG><a name="[dc5294]"></a>__rt_lib_init_exceptions_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002C))

<P><STRONG><a name="[dc5654]"></a>__rt_lib_init_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001B))

<P><STRONG><a name="[dc5564]"></a>__rt_lib_init_getenv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001F))

<P><STRONG><a name="[dc5b40]"></a>__rt_lib_init_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000006))

<P><STRONG><a name="[dc599c]"></a>__rt_lib_init_lc_collate_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000D))

<P><STRONG><a name="[dc5924]"></a>__rt_lib_init_lc_ctype_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000F))

<P><STRONG><a name="[dc58ac]"></a>__rt_lib_init_lc_monetary_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000011))

<P><STRONG><a name="[dc5834]"></a>__rt_lib_init_lc_numeric_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000013))

<P><STRONG><a name="[dc57bc]"></a>__rt_lib_init_lc_time_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000015))

<P><STRONG><a name="[dc5a50]"></a>__rt_lib_init_rand_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000A))

<P><STRONG><a name="[dc51e0]"></a>__rt_lib_init_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002F))

<P><STRONG><a name="[dc56cc]"></a>__rt_lib_init_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000019))

<P><STRONG><a name="[dc54ec]"></a>__rt_lib_init_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000021))

<P><STRONG><a name="[dc5ac8]"></a>__rt_lib_init_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000008))

<P><STRONG><a name="[dc32f0]"></a>__rt_lib_shutdown</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown.o(.ARM.Collect$$libshutdown$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[dc48f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_ls (via Veneer)
</UL>

<P><STRONG><a name="[1483a18]"></a>__rt_lib_shutdown_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000006))

<P><STRONG><a name="[1483838]"></a>__rt_lib_shutdown_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000E))

<P><STRONG><a name="[14837fc]"></a>__rt_lib_shutdown_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F))

<P><STRONG><a name="[1483964]"></a>__rt_lib_shutdown_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000009))

<P><STRONG><a name="[dc206c]"></a>__rt_lib_shutdown_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000003))

<P><STRONG><a name="[14838ec]"></a>__rt_lib_shutdown_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000B))

<P><STRONG><a name="[dc85ac]"></a>__rt_entry</STRONG> (ARM, 0 bytes, Stack size unknown bytes, rtentry.o(.ARM.Collect$$rtentry$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[dc86d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
<LI><a href="#[148343c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_rt2
</UL>

<P><STRONG><a name="[dc7f94]"></a>__rt_entry_presh_1</STRONG> (ARM, 0 bytes, Stack size unknown bytes, rtentry2.o(.ARM.Collect$$rtentry$$00000002))

<P><STRONG><a name="[dc7c10]"></a>__rt_entry_sh</STRONG> (ARM, 0 bytes, Stack size unknown bytes, rtentry4.o(.ARM.Collect$$rtentry$$00000004))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __rt_entry_sh &rArr; __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[dc79b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[dc7ee0]"></a>__rt_entry_li</STRONG> (ARM, 0 bytes, Stack size unknown bytes, rtentry2.o(.ARM.Collect$$rtentry$$0000000A))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __rt_entry_li &rArr; __rt_lib_init &rArr; _fp_init
</UL>
<BR>[Calls]<UL><LI><a href="#[dc71c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init (via Veneer)
</UL>

<P><STRONG><a name="[dc7f1c]"></a>__rt_entry_postsh_1</STRONG> (ARM, 0 bytes, Stack size unknown bytes, rtentry2.o(.ARM.Collect$$rtentry$$00000009))

<P><STRONG><a name="[dc7e2c]"></a>__rt_entry_main</STRONG> (ARM, 0 bytes, Stack size unknown bytes, rtentry2.o(.ARM.Collect$$rtentry$$0000000D))
<BR><BR>[Calls]<UL><LI><a href="#[dc7850]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit (via BX)
</UL>

<P><STRONG><a name="[dc7e68]"></a>__rt_entry_postli_1</STRONG> (ARM, 0 bytes, Stack size unknown bytes, rtentry2.o(.ARM.Collect$$rtentry$$0000000C))

<P><STRONG><a name="[dc6a40]"></a>__rt_exit</STRONG> (ARM, 0 bytes, Stack size unknown bytes, rtexit.o(.ARM.Collect$$rtexit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[dc7850]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit (via Veneer)
</UL>

<P><STRONG><a name="[dc48f8]"></a>__rt_exit_ls</STRONG> (ARM, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000003))
<BR><BR>[Calls]<UL><LI><a href="#[dc32f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown (via Veneer)
</UL>

<P><STRONG><a name="[dc4934]"></a>__rt_exit_prels_1</STRONG> (ARM, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000002))

<P><STRONG><a name="[dc48bc]"></a>__rt_exit_exit</STRONG> (ARM, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[dc4b14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
</UL>

<P><STRONG><a name="[dd05a4]"></a>__user_initial_stackheap</STRONG> (ARM, 0 bytes, Stack size unknown bytes, lpc2400.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[dc79b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[dcf4c4]"></a>TxEN_Init</STRONG> (ARM, 76 bytes, Stack size 8 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TxEN_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[dcf230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Tx1_EN
</UL>
<BR>[Called By]<UL><LI><a href="#[dcf410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[dcf488]"></a>IniWDT</STRONG> (ARM, 32 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[dcf410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[dcf44c]"></a>FeedWDT</STRONG> (ARM, 24 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[dcf410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[dcf410]"></a>main</STRONG> (ARM, 96 bytes, Stack size 8 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = main &rArr; T1_recCheck &rArr; CRC16
</UL>
<BR>[Calls]<UL><LI><a href="#[dcf104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;refreshWriteBuff
<LI><a href="#[dcf17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkWriteCMD
<LI><a href="#[dcf1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_SendData
<LI><a href="#[dcf1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_Ini
<LI><a href="#[dcf26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer1_Init
<LI><a href="#[dcf2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Time0Init
<LI><a href="#[dcf2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T1_recCheck
<LI><a href="#[dcf320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T1_check
<LI><a href="#[dcf35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T1_CheckSendHold
<LI><a href="#[dcf398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IOinit
<LI><a href="#[dcf3d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckIOpin
<LI><a href="#[dcf44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FeedWDT
<LI><a href="#[dcf488]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IniWDT
<LI><a href="#[dcf4c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TxEN_Init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rtentry2.o(.ARM.Collect$$rtentry$$0000000D)
</UL>
<P><STRONG><a name="[dcea38]"></a>reverse_light</STRONG> (ARM, 84 bytes, Stack size 0 bytes, time.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[dce9c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ_Timer1
</UL>

<P><STRONG><a name="[dce9fc]"></a>IRQ_Time0</STRONG> (ARM, 72 bytes, Stack size 8 bytes, time.o(.text), UNUSED)

<P><STRONG><a name="[dce9c0]"></a>IRQ_Timer1</STRONG> (ARM, 240 bytes, Stack size 16 bytes, time.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[dcea38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reverse_light
</UL>

<P><STRONG><a name="[dcf2a8]"></a>Time0Init</STRONG> (ARM, 140 bytes, Stack size 0 bytes, time.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[dcf410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[dcf26c]"></a>Timer1_Init</STRONG> (ARM, 116 bytes, Stack size 0 bytes, time.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[dcf410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[dcd868]"></a>DelayNS</STRONG> (ARM, 44 bytes, Stack size 0 bytes, uart0.o(.text), UNUSED)

<P><STRONG><a name="[dcd82c]"></a>IRQ_UART0</STRONG> (ARM, 264 bytes, Stack size 20 bytes, uart0.o(.text), UNUSED)

<P><STRONG><a name="[dcd7f0]"></a>UART0_Ini</STRONG> (ARM, 176 bytes, Stack size 0 bytes, uart0.o(.text), UNUSED)

<P><STRONG><a name="[dcd7b4]"></a>UART0_IniByBuad</STRONG> (ARM, 188 bytes, Stack size 0 bytes, uart0.o(.text), UNUSED)

<P><STRONG><a name="[dcd778]"></a>CRC16</STRONG> (ARM, 92 bytes, Stack size 12 bytes, uart0.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = CRC16
</UL>
<BR>[Called By]<UL><LI><a href="#[dcc4f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadT1SendDataBuff
<LI><a href="#[dcc530]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadT1WriteHeartBuff
<LI><a href="#[dcc56c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadT1ReadHeartBuff
<LI><a href="#[dcd5d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T0_recCheck
<LI><a href="#[dcd688]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Load_sendBuffer
<LI><a href="#[dcf2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T1_recCheck
</UL>

<P><STRONG><a name="[dcd73c]"></a>Tx0_EN</STRONG> (ARM, 100 bytes, Stack size 0 bytes, uart0.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[dcd64c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T0_check
</UL>

<P><STRONG><a name="[dcf230]"></a>Tx1_EN</STRONG> (ARM, 100 bytes, Stack size 0 bytes, uart0.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[dcf320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T1_check
<LI><a href="#[dcf35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T1_CheckSendHold
<LI><a href="#[dcf4c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TxEN_Init
</UL>

<P><STRONG><a name="[dcd700]"></a>Tx2_EN</STRONG> (ARM, 100 bytes, Stack size 0 bytes, uart0.o(.text), UNUSED)

<P><STRONG><a name="[dcd6c4]"></a>Tx3_EN</STRONG> (ARM, 116 bytes, Stack size 0 bytes, uart0.o(.text), UNUSED)

<P><STRONG><a name="[dcf35c]"></a>T1_CheckSendHold</STRONG> (ARM, 112 bytes, Stack size 8 bytes, uart0.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = T1_CheckSendHold
</UL>
<BR>[Calls]<UL><LI><a href="#[dcf1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_Ini
<LI><a href="#[dcf230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Tx1_EN
</UL>
<BR>[Called By]<UL><LI><a href="#[dcf410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[dcd688]"></a>Load_sendBuffer</STRONG> (ARM, 116 bytes, Stack size 16 bytes, uart0.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[dcd778]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CRC16
</UL>
<BR>[Called By]<UL><LI><a href="#[dcd55c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QueryTheAddress
<LI><a href="#[dcd598]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0_SendData
</UL>

<P><STRONG><a name="[dcd64c]"></a>T0_check</STRONG> (ARM, 1092 bytes, Stack size 4 bytes, uart0.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[dcd73c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Tx0_EN
</UL>

<P><STRONG><a name="[dcd610]"></a>ReFreshBuff</STRONG> (ARM, 56 bytes, Stack size 0 bytes, uart0.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[dcd5d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T0_recCheck
</UL>

<P><STRONG><a name="[dcd5d4]"></a>T0_recCheck</STRONG> (ARM, 872 bytes, Stack size 24 bytes, uart0.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[dcd430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadLL3DatatoSendtoJOS2
<LI><a href="#[dcd46c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadLL2DatatoSendtoJOS2
<LI><a href="#[dcd4a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadLL1DatatoSendtoJOS2
<LI><a href="#[dcd4e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KS2_DelayOn
<LI><a href="#[dcd520]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KS1_DelayOn
<LI><a href="#[dcd610]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReFreshBuff
<LI><a href="#[dcd778]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CRC16
</UL>

<P><STRONG><a name="[dcd598]"></a>UART0_SendData</STRONG> (ARM, 876 bytes, Stack size 4 bytes, uart0.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[dcd688]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Load_sendBuffer
</UL>

<P><STRONG><a name="[dcd55c]"></a>QueryTheAddress</STRONG> (ARM, 32 bytes, Stack size 4 bytes, uart0.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[dcd688]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Load_sendBuffer
</UL>

<P><STRONG><a name="[dcc5a8]"></a>IRQ_UART1</STRONG> (ARM, 272 bytes, Stack size 20 bytes, uart1.o(.text), UNUSED)

<P><STRONG><a name="[dcf1f4]"></a>UART1_Ini</STRONG> (ARM, 192 bytes, Stack size 0 bytes, uart1.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[dcf35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T1_CheckSendHold
<LI><a href="#[dcf410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[dcf320]"></a>T1_check</STRONG> (ARM, 816 bytes, Stack size 8 bytes, uart1.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = T1_check
</UL>
<BR>[Calls]<UL><LI><a href="#[dcf230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Tx1_EN
</UL>
<BR>[Called By]<UL><LI><a href="#[dcf410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[dcf2e4]"></a>T1_recCheck</STRONG> (ARM, 912 bytes, Stack size 24 bytes, uart1.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = T1_recCheck &rArr; CRC16
</UL>
<BR>[Calls]<UL><LI><a href="#[dcd778]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CRC16
</UL>
<BR>[Called By]<UL><LI><a href="#[dcf410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[dcc56c]"></a>LoadT1ReadHeartBuff</STRONG> (ARM, 124 bytes, Stack size 8 bytes, uart1.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[dcd778]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CRC16
</UL>

<P><STRONG><a name="[dcc530]"></a>LoadT1WriteHeartBuff</STRONG> (ARM, 160 bytes, Stack size 8 bytes, uart1.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[dcd778]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CRC16
</UL>

<P><STRONG><a name="[dcc4f4]"></a>LoadT1SendDataBuff</STRONG> (ARM, 304 bytes, Stack size 32 bytes, uart1.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[dcd778]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CRC16
</UL>

<P><STRONG><a name="[dcf1b8]"></a>UART1_SendData</STRONG> (ARM, 120 bytes, Stack size 0 bytes, uart1.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[dcf410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[dcf398]"></a>IOinit</STRONG> (ARM, 188 bytes, Stack size 0 bytes, iocontrol.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[dcf410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[dc9f38]"></a>KS8_DelayOn</STRONG> (ARM, 56 bytes, Stack size 0 bytes, iocontrol.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[dcf17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkWriteCMD
</UL>

<P><STRONG><a name="[dcb324]"></a>KS7_DelayOn</STRONG> (ARM, 56 bytes, Stack size 0 bytes, iocontrol.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[dcb180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateNewJOSdata
<LI><a href="#[dcf17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkWriteCMD
</UL>

<P><STRONG><a name="[dcb360]"></a>KS6_DelayOn</STRONG> (ARM, 56 bytes, Stack size 0 bytes, iocontrol.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[dc96c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateNewLLdata
<LI><a href="#[dcb180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateNewJOSdata
<LI><a href="#[dcf17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkWriteCMD
</UL>

<P><STRONG><a name="[dcb39c]"></a>KS5_DelayOn</STRONG> (ARM, 56 bytes, Stack size 0 bytes, iocontrol.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[dc96c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateNewLLdata
<LI><a href="#[dcb180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateNewJOSdata
<LI><a href="#[dcf17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkWriteCMD
</UL>

<P><STRONG><a name="[dcb3d8]"></a>KS4_DelayOn</STRONG> (ARM, 56 bytes, Stack size 0 bytes, iocontrol.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[dc96c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateNewLLdata
<LI><a href="#[dcb180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateNewJOSdata
<LI><a href="#[dcf17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkWriteCMD
</UL>

<P><STRONG><a name="[dcb414]"></a>KS3_DelayOn</STRONG> (ARM, 56 bytes, Stack size 0 bytes, iocontrol.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[dcb180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateNewJOSdata
<LI><a href="#[dcf17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkWriteCMD
</UL>

<P><STRONG><a name="[dcd4e4]"></a>KS2_DelayOn</STRONG> (ARM, 56 bytes, Stack size 0 bytes, iocontrol.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[dcb180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateNewJOSdata
<LI><a href="#[dcd5d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T0_recCheck
<LI><a href="#[dcf17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkWriteCMD
</UL>

<P><STRONG><a name="[dcd520]"></a>KS1_DelayOn</STRONG> (ARM, 56 bytes, Stack size 0 bytes, iocontrol.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[dcb180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateNewJOSdata
<LI><a href="#[dcd5d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T0_recCheck
<LI><a href="#[dcf17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkWriteCMD
</UL>

<P><STRONG><a name="[dcf17c]"></a>checkWriteCMD</STRONG> (ARM, 176 bytes, Stack size 4 bytes, iocontrol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = checkWriteCMD
</UL>
<BR>[Calls]<UL><LI><a href="#[dc9f38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KS8_DelayOn
<LI><a href="#[dcb324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KS7_DelayOn
<LI><a href="#[dcb360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KS6_DelayOn
<LI><a href="#[dcb39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KS5_DelayOn
<LI><a href="#[dcb3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KS4_DelayOn
<LI><a href="#[dcb414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KS3_DelayOn
<LI><a href="#[dcd4e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KS2_DelayOn
<LI><a href="#[dcd520]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KS1_DelayOn
</UL>
<BR>[Called By]<UL><LI><a href="#[dcf410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[dcf3d4]"></a>CheckIOpin</STRONG> (ARM, 300 bytes, Stack size 0 bytes, iocontrol.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[dcf410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[dcf104]"></a>refreshWriteBuff</STRONG> (ARM, 60 bytes, Stack size 0 bytes, iocontrol.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[dcf410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[dcb180]"></a>UpdateNewJOSdata</STRONG> (ARM, 112 bytes, Stack size 8 bytes, keydatatosend.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[dcb324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KS7_DelayOn
<LI><a href="#[dcb360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KS6_DelayOn
<LI><a href="#[dcb39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KS5_DelayOn
<LI><a href="#[dcb3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KS4_DelayOn
<LI><a href="#[dcb414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KS3_DelayOn
<LI><a href="#[dcd4e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KS2_DelayOn
<LI><a href="#[dcd520]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KS1_DelayOn
</UL>

<P><STRONG><a name="[dc96c8]"></a>UpdateNewLLdata</STRONG> (ARM, 252 bytes, Stack size 8 bytes, keydatatosend.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[dcb360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KS6_DelayOn
<LI><a href="#[dcb39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KS5_DelayOn
<LI><a href="#[dcb3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KS4_DelayOn
</UL>

<P><STRONG><a name="[dca3ac]"></a>UpdateOldLLdata</STRONG> (ARM, 16 bytes, Stack size 0 bytes, keydatatosend.o(.text), UNUSED)

<P><STRONG><a name="[dc968c]"></a>UpdateOldJOSdata</STRONG> (ARM, 4 bytes, Stack size 0 bytes, keydatatosend.o(.text), UNUSED)

<P><STRONG><a name="[dc9650]"></a>changeBit</STRONG> (ARM, 112 bytes, Stack size 8 bytes, keydatatosend.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[dcd430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadLL3DatatoSendtoJOS2
<LI><a href="#[dcd46c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadLL2DatatoSendtoJOS2
<LI><a href="#[dcd4a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadLL1DatatoSendtoJOS2
</UL>

<P><STRONG><a name="[dc9614]"></a>RchangeBit</STRONG> (ARM, 112 bytes, Stack size 8 bytes, keydatatosend.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[dcd430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadLL3DatatoSendtoJOS2
<LI><a href="#[dcd46c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadLL2DatatoSendtoJOS2
<LI><a href="#[dcd4a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadLL1DatatoSendtoJOS2
</UL>

<P><STRONG><a name="[dc95d8]"></a>XianDaoSetnew</STRONG> (ARM, 108 bytes, Stack size 0 bytes, keydatatosend.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[dc959c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XianDaoSet
</UL>

<P><STRONG><a name="[dc959c]"></a>XianDaoSet</STRONG> (ARM, 188 bytes, Stack size 12 bytes, keydatatosend.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[dc95d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XianDaoSetnew
</UL>
<BR>[Called By]<UL><LI><a href="#[dcd430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadLL3DatatoSendtoJOS2
<LI><a href="#[dcd46c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadLL2DatatoSendtoJOS2
<LI><a href="#[dcd4a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadLL1DatatoSendtoJOS2
</UL>

<P><STRONG><a name="[dcd4a8]"></a>LoadLL1DatatoSendtoJOS2</STRONG> (ARM, 4508 bytes, Stack size 8 bytes, keydatatosend.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[dc9164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
<LI><a href="#[dc959c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XianDaoSet
<LI><a href="#[dc9614]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RchangeBit
<LI><a href="#[dc9650]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;changeBit
</UL>
<BR>[Called By]<UL><LI><a href="#[dcd5d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T0_recCheck
</UL>

<P><STRONG><a name="[dcd46c]"></a>LoadLL2DatatoSendtoJOS2</STRONG> (ARM, 2960 bytes, Stack size 8 bytes, keydatatosend.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[dc9164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
<LI><a href="#[dc959c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XianDaoSet
<LI><a href="#[dc9614]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RchangeBit
<LI><a href="#[dc9650]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;changeBit
</UL>
<BR>[Called By]<UL><LI><a href="#[dcd5d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T0_recCheck
</UL>

<P><STRONG><a name="[dcd430]"></a>LoadLL3DatatoSendtoJOS2</STRONG> (ARM, 5064 bytes, Stack size 8 bytes, keydatatosend.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[dc9164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
<LI><a href="#[dc959c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XianDaoSet
<LI><a href="#[dc9614]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RchangeBit
<LI><a href="#[dc9650]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;changeBit
</UL>
<BR>[Called By]<UL><LI><a href="#[dcd5d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T0_recCheck
</UL>

<P><STRONG><a name="[dc91a0]"></a>__aeabi_idiv</STRONG> (ARM, 0 bytes, Stack size 8 bytes, aeabi_sdiv.o(.text), UNUSED)

<P><STRONG><a name="[dc9164]"></a>__aeabi_idivmod</STRONG> (ARM, 384 bytes, Stack size 8 bytes, aeabi_sdiv.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[dcd430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadLL3DatatoSendtoJOS2
<LI><a href="#[dcd46c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadLL2DatatoSendtoJOS2
<LI><a href="#[dcd4a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadLL1DatatoSendtoJOS2
</UL>

<P><STRONG><a name="[dc8840]"></a>__use_two_region_memory</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[dc8804]"></a>__rt_heap_escrow$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[dc87c8]"></a>__rt_heap_expand$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[dc79b8]"></a>__user_setup_stackheap</STRONG> (ARM, 96 bytes, Stack size 8 bytes, sys_stackheap_outer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[dc6b30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_perproc_libspace
<LI><a href="#[dd05a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_initial_stackheap
</UL>
<BR>[Called By]<UL><LI><a href="#[dc7c10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_sh
</UL>

<P><STRONG><a name="[dc7850]"></a>exit</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, exit.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[dc6a40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit (via Veneer)
<LI><a href="#[dc77d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_call_atexit_fns (Weak Reference)
</UL>
<BR>[Called By]<UL><LI><a href="#[dc7e2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[dc6b6c]"></a>__user_libspace</STRONG> (ARM, 12 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[dc6b30]"></a>__user_perproc_libspace</STRONG> (ARM, 0 bytes, Stack size 0 bytes, libspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[dc79b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[dc6af4]"></a>__user_perthread_libspace</STRONG> (ARM, 0 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[dc4b14]"></a>_sys_exit</STRONG> (ARM, 20 bytes, Stack size 0 bytes, sys_exit.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[dc48bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_exit
</UL>

<P><STRONG><a name="[dc45ec]"></a>__rt_fp_status_addr</STRONG> (ARM, 16 bytes, Stack size 0 bytes, rt_fp_status_addr_intlibspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[dc4c7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_init
</UL>

<P><STRONG><a name="[dc3f20]"></a>__I$use$semihosting</STRONG> (ARM, 0 bytes, Stack size 0 bytes, use_no_semi.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> sys_exit.o(.text)
</UL>
<P><STRONG><a name="[dc3ee4]"></a>__use_no_semihosting_swi</STRONG> (ARM, 4 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[dc4c7c]"></a>_fp_init</STRONG> (ARM, 24 bytes, Stack size 8 bytes, fpinit.o(x$fpl$fpinit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _fp_init
</UL>
<BR>[Calls]<UL><LI><a href="#[dc45ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_fp_status_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[dc71c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init (via Veneer)
</UL>

<P><STRONG><a name="[dc4c40]"></a>__fplib_config_pureend_doubles</STRONG> (ARM, 0 bytes, Stack size unknown bytes, fpinit.o(x$fpl$fpinit), UNUSED)
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[dd07c0]"></a>Undef_Handler</STRONG> (ARM, 4 bytes, Stack size unknown bytes, lpc2400.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[dd07c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Undef_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[dd07c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Undef_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lpc2400.o(RESET)
</UL>
<P><STRONG><a name="[dd0784]"></a>SWI_Handler</STRONG> (ARM, 4 bytes, Stack size unknown bytes, lpc2400.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[dd0784]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SWI_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[dd0784]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SWI_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lpc2400.o(RESET)
</UL>
<P><STRONG><a name="[dd0748]"></a>PAbt_Handler</STRONG> (ARM, 4 bytes, Stack size unknown bytes, lpc2400.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[dd0748]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PAbt_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[dd0748]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PAbt_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lpc2400.o(RESET)
</UL>
<P><STRONG><a name="[dd070c]"></a>DAbt_Handler</STRONG> (ARM, 4 bytes, Stack size unknown bytes, lpc2400.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[dd070c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DAbt_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[dd070c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DAbt_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lpc2400.o(RESET)
</UL>
<P><STRONG><a name="[dd06d0]"></a>IRQ_Handler</STRONG> (ARM, 4 bytes, Stack size unknown bytes, lpc2400.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[dd06d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[dd06d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lpc2400.o(RESET)
</UL>
<P><STRONG><a name="[dd0694]"></a>FIQ_Handler</STRONG> (ARM, 4 bytes, Stack size unknown bytes, lpc2400.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[dd0694]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FIQ_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[dd0694]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FIQ_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lpc2400.o(RESET)
</UL><P>
<H3>
Undefined Global Symbols
</H3>
<P><STRONG><a name="[dc77d8]"></a>_call_atexit_fns</STRONG> (ARM, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[dc7850]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>
<HR></body></html>
